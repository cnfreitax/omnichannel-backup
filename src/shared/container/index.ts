import { container } from 'tsyringe';
import '@modules/user/providers';
import './providers';
import IUserRepository from '@modules/user/repositories/IUserRepository';
import UserRepository from '@modules/user/infra/typeorm/repositories/UserRepository';
import ICompanyRepository from '@modules/company/repositories/ICompanyRepository';
import CompaniesRepository from '@modules/company/infra/typeorm/repositories/CompaniesRepository';
import ISectorRepository from '@modules/company/repositories/ISectorRepository';
import SectorRepository from '@modules/company/infra/typeorm/repositories/SectorRepository';
import IOptionRepository from '@modules/chatbot/repositories/IOptionRepository';
import OptionRepository from '@modules/chatbot/infra/typeorm/repositories/OptionRepository';
import IContainerRepository from '@modules/chatbot/repositories/IContainerRepository';
import ContainerRepository from '@modules/chatbot/infra/typeorm/repositories/ContainerRepository';
import ICustomerRepository from '@modules/customer/repository/ICustomerRepository';
import CustomerRepository from '@modules/customer/infra/typeorm/repository/CustomerRepository';
import ICustomerStageRepository from '@modules/messageHandler/repository/ICustomerStage';
import CustomerStageRepository from '@modules/messageHandler/infra/typeorm/repository/CustomerStageRepository';
import { IAuthCodeApi } from '@modules/messageHandler/repository/IAuthCodeApi';
import AuthCodeApi from '@modules/messageHandler/infra/typeorm/repository/AuthCodeApi';
import IAvailableUser from '@modules/user/repositories/IAvailableUser';
import AvailableUserRepository from '@modules/user/infra/typeorm/repositories/AvailableUserRepository';
import IChatlineRepository from '@modules/chat/repository/IChatlineRepository';
import ChatlineRepository from '@modules/chat/infra/typeorm/repository/ChatlineRepository';

container.registerSingleton<IUserRepository>('UserRepository', UserRepository);
container.registerSingleton<ICompanyRepository>('CompaniesRepository', CompaniesRepository);
container.registerSingleton<ISectorRepository>('SectorRepository', SectorRepository);
container.registerSingleton<IOptionRepository>('OptionRepository', OptionRepository);
container.registerSingleton<IContainerRepository>('ContainerRepository', ContainerRepository);
container.registerSingleton<ICustomerRepository>('CustomerRepository', CustomerRepository);
container.registerSingleton<ICustomerStageRepository>('CustomerStageRepository', CustomerStageRepository);
container.registerSingleton<IAuthCodeApi>('AuthCodeApi', AuthCodeApi);
container.registerSingleton<IAvailableUser>('AvailableUser', AvailableUserRepository);
container.registerSingleton<IChatlineRepository>('ChatlineRepository', ChatlineRepository);
